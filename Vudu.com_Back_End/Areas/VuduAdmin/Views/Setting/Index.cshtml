@using X.PagedList
@using X.PagedList.Mvc.Core

@model IPagedList<Setting>
@{
    ViewData["Title"] = "Index";
}

<table class="table">
    <thead>
        <tr>
            <th scope="col">Id</th>
            <th scope="col">Key</th>
            <th scope="col">Value</th>
        </tr>
    </thead>
    <tbody>
        @foreach (Setting setting in Model)
        {
            <tr>
                <td>@setting.Id</td>
                <td>@setting.Key</td>
                <td>@setting.Value</td>
                <td>
                    <div class="d-flex justify-content-around">
                        <div>
                            <a class="mx-2" style="color:red; font-size:25px;" asp-controller="Setting" asp-action="Detail" asp-route-Id="@setting.Id"><i class="fa-solid fa-circle-info"></i></a>
                        </div>

                        <div>
                            <a style="color:red; font-size:25px;" asp-controller="Setting" asp-action="Edit" asp-route-Id="@setting.Id"><i class="fa-solid fa-pen-to-square"></i></a>
                        </div>

                        <div class="mx-2">
                            <a style="color:red; font-size:25px;" asp-controller="Setting" asp-action="Delete" asp-route-Id="@setting.Id"><i class="fa-solid fa-trash-can"></i></a>
                        </div>
                    </div>

                </td>
            </tr>
        }

    </tbody>
</table>
<div> 
 @Html.PagedListPager((IPagedList)Model,page=>Url.Action("Index",new {page}),new X.PagedList.Web.Common.PagedListRenderOptionsBase
{
    LiElementClasses=new[] {"page-item"},
    PageClasses = new[] {"page-link"}
})
</div>




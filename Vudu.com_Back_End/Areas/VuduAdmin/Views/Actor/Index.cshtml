@using X.PagedList
@using X.PagedList.Mvc.Core
@model PagedList<Actor>
@{
    ViewData["Title"] = "Index";
}

<div class=" mt-4">
    <a class="btn btn-dark" asp-controller="Actor" asp-action="Create">Create</a>
</div>
<table class="table">
    <thead>
        <tr>
            <th scope="col">Id</th>
            <th scope="col">Name</th>
            <th scope="col">Image</th>
            <th scope="col">Duty</th>
        </tr>
    </thead>
    <tbody>
        @foreach (Actor actor in Model)
        {
            <tr>
                <td>@actor.Id</td>
                 <td>@actor.Name</td>
                  
                <td>
                    <img style="height:200px; width:200px;" src="~/assets/img/Actors/OneMovies/@actor.Image" />
                </td>
                <td>@actor.Duty</td>
                <td>
                    <div class="d-flex justify-content-around">
                        <div>
                            <a class="mx-2" style="color:red; font-size:25px;" asp-controller="actor" asp-action="Detail" asp-route-Id="@actor.Id"><i class="fa-solid fa-circle-info"></i></a>
                        </div>

                        <div>
                            <a style="color:red; font-size:25px;" asp-controller="actor" asp-action="Edit" asp-route-Id="@actor.Id"><i class="fa-solid fa-pen-to-square"></i></a>
                        </div>

                        <div class="mx-2">
                            <a style="color:red; font-size:25px;" asp-controller="actor" asp-action="Delete" asp-route-Id="@actor.Id"><i class="fa-solid fa-trash-can"></i></a>
                        </div>
                    </div>

                </td>
            </tr>
        }

    </tbody>
</table>

 @Html.PagedListPager((IPagedList)Model,page=>Url.Action("Index",new {page}),new X.PagedList.Web.Common.PagedListRenderOptionsBase
{
    LiElementClasses=new[] {"page-item"},
    PageClasses = new[] {"page-link"}
})


